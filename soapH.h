/* soapH.h
   Generated by gSOAP 2.8.17r from StlmDate.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_long(soap, data),0) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_OnlWS__GetTZeroNodeInfo
#define SOAP_TYPE_OnlWS__GetTZeroNodeInfo (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_OnlWS__GetTZeroNodeInfo(struct soap*, struct OnlWS__GetTZeroNodeInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_OnlWS__GetTZeroNodeInfo(struct soap*, const struct OnlWS__GetTZeroNodeInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_OnlWS__GetTZeroNodeInfo(struct soap*, const char*, int, const struct OnlWS__GetTZeroNodeInfo *, const char*);
SOAP_FMAC3 struct OnlWS__GetTZeroNodeInfo * SOAP_FMAC4 soap_in_OnlWS__GetTZeroNodeInfo(struct soap*, const char*, struct OnlWS__GetTZeroNodeInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_OnlWS__GetTZeroNodeInfo(struct soap*, const struct OnlWS__GetTZeroNodeInfo *, const char*, const char*);

#ifndef soap_write_OnlWS__GetTZeroNodeInfo
#define soap_write_OnlWS__GetTZeroNodeInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_OnlWS__GetTZeroNodeInfo(soap, data),0) || soap_put_OnlWS__GetTZeroNodeInfo(soap, data, "OnlWS:GetTZeroNodeInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__GetTZeroNodeInfo * SOAP_FMAC4 soap_get_OnlWS__GetTZeroNodeInfo(struct soap*, struct OnlWS__GetTZeroNodeInfo *, const char*, const char*);

#ifndef soap_read_OnlWS__GetTZeroNodeInfo
#define soap_read_OnlWS__GetTZeroNodeInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_OnlWS__GetTZeroNodeInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_OnlWS__GetTZeroNodeInfoResponse
#define SOAP_TYPE_OnlWS__GetTZeroNodeInfoResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_OnlWS__GetTZeroNodeInfoResponse(struct soap*, struct OnlWS__GetTZeroNodeInfoResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_OnlWS__GetTZeroNodeInfoResponse(struct soap*, const struct OnlWS__GetTZeroNodeInfoResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_OnlWS__GetTZeroNodeInfoResponse(struct soap*, const char*, int, const struct OnlWS__GetTZeroNodeInfoResponse *, const char*);
SOAP_FMAC3 struct OnlWS__GetTZeroNodeInfoResponse * SOAP_FMAC4 soap_in_OnlWS__GetTZeroNodeInfoResponse(struct soap*, const char*, struct OnlWS__GetTZeroNodeInfoResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_OnlWS__GetTZeroNodeInfoResponse(struct soap*, const struct OnlWS__GetTZeroNodeInfoResponse *, const char*, const char*);

#ifndef soap_write_OnlWS__GetTZeroNodeInfoResponse
#define soap_write_OnlWS__GetTZeroNodeInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_OnlWS__GetTZeroNodeInfoResponse(soap, data),0) || soap_put_OnlWS__GetTZeroNodeInfoResponse(soap, data, "OnlWS:GetTZeroNodeInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__GetTZeroNodeInfoResponse * SOAP_FMAC4 soap_get_OnlWS__GetTZeroNodeInfoResponse(struct soap*, struct OnlWS__GetTZeroNodeInfoResponse *, const char*, const char*);

#ifndef soap_read_OnlWS__GetTZeroNodeInfoResponse
#define soap_read_OnlWS__GetTZeroNodeInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_OnlWS__GetTZeroNodeInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_OnlWS__GetStlmDate
#define SOAP_TYPE_OnlWS__GetStlmDate (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_OnlWS__GetStlmDate(struct soap*, struct OnlWS__GetStlmDate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_OnlWS__GetStlmDate(struct soap*, const struct OnlWS__GetStlmDate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_OnlWS__GetStlmDate(struct soap*, const char*, int, const struct OnlWS__GetStlmDate *, const char*);
SOAP_FMAC3 struct OnlWS__GetStlmDate * SOAP_FMAC4 soap_in_OnlWS__GetStlmDate(struct soap*, const char*, struct OnlWS__GetStlmDate *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_OnlWS__GetStlmDate(struct soap*, const struct OnlWS__GetStlmDate *, const char*, const char*);

#ifndef soap_write_OnlWS__GetStlmDate
#define soap_write_OnlWS__GetStlmDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_OnlWS__GetStlmDate(soap, data),0) || soap_put_OnlWS__GetStlmDate(soap, data, "OnlWS:GetStlmDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__GetStlmDate * SOAP_FMAC4 soap_get_OnlWS__GetStlmDate(struct soap*, struct OnlWS__GetStlmDate *, const char*, const char*);

#ifndef soap_read_OnlWS__GetStlmDate
#define soap_read_OnlWS__GetStlmDate(soap, data) ( soap_begin_recv(soap) || !soap_get_OnlWS__GetStlmDate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_OnlWS__TZeroNodeInfoResp
#define SOAP_TYPE_OnlWS__TZeroNodeInfoResp (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_OnlWS__TZeroNodeInfoResp(struct soap*, struct OnlWS__TZeroNodeInfoResp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_OnlWS__TZeroNodeInfoResp(struct soap*, struct OnlWS__TZeroNodeInfoResp const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_OnlWS__TZeroNodeInfoResp(struct soap*, const char*, int, const struct OnlWS__TZeroNodeInfoResp *, const char*);
SOAP_FMAC3 struct OnlWS__TZeroNodeInfoResp * SOAP_FMAC4 soap_in_OnlWS__TZeroNodeInfoResp(struct soap*, const char*, struct OnlWS__TZeroNodeInfoResp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_OnlWS__TZeroNodeInfoResp(struct soap*, const struct OnlWS__TZeroNodeInfoResp *, const char*, const char*);

#ifndef soap_write_OnlWS__TZeroNodeInfoResp
#define soap_write_OnlWS__TZeroNodeInfoResp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_OnlWS__TZeroNodeInfoResp(soap, data),0) || soap_put_OnlWS__TZeroNodeInfoResp(soap, data, "OnlWS:TZeroNodeInfoResp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__TZeroNodeInfoResp * SOAP_FMAC4 soap_get_OnlWS__TZeroNodeInfoResp(struct soap*, struct OnlWS__TZeroNodeInfoResp *, const char*, const char*);

#ifndef soap_read_OnlWS__TZeroNodeInfoResp
#define soap_read_OnlWS__TZeroNodeInfoResp(soap, data) ( soap_begin_recv(soap) || !soap_get_OnlWS__TZeroNodeInfoResp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_OnlWS__TZeroNodeInfo
#define SOAP_TYPE_OnlWS__TZeroNodeInfo (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_OnlWS__TZeroNodeInfo(struct soap*, struct OnlWS__TZeroNodeInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_OnlWS__TZeroNodeInfo(struct soap*, const struct OnlWS__TZeroNodeInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_OnlWS__TZeroNodeInfo(struct soap*, const char*, int, const struct OnlWS__TZeroNodeInfo *, const char*);
SOAP_FMAC3 struct OnlWS__TZeroNodeInfo * SOAP_FMAC4 soap_in_OnlWS__TZeroNodeInfo(struct soap*, const char*, struct OnlWS__TZeroNodeInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_OnlWS__TZeroNodeInfo(struct soap*, const struct OnlWS__TZeroNodeInfo *, const char*, const char*);

#ifndef soap_write_OnlWS__TZeroNodeInfo
#define soap_write_OnlWS__TZeroNodeInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_OnlWS__TZeroNodeInfo(soap, data),0) || soap_put_OnlWS__TZeroNodeInfo(soap, data, "OnlWS:TZeroNodeInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__TZeroNodeInfo * SOAP_FMAC4 soap_get_OnlWS__TZeroNodeInfo(struct soap*, struct OnlWS__TZeroNodeInfo *, const char*, const char*);

#ifndef soap_read_OnlWS__TZeroNodeInfo
#define soap_read_OnlWS__TZeroNodeInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_OnlWS__TZeroNodeInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_OnlWS__StlmdateResp
#define SOAP_TYPE_OnlWS__StlmdateResp (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_OnlWS__StlmdateResp(struct soap*, struct OnlWS__StlmdateResp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_OnlWS__StlmdateResp(struct soap*, const struct OnlWS__StlmdateResp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_OnlWS__StlmdateResp(struct soap*, const char*, int, const struct OnlWS__StlmdateResp *, const char*);
SOAP_FMAC3 struct OnlWS__StlmdateResp * SOAP_FMAC4 soap_in_OnlWS__StlmdateResp(struct soap*, const char*, struct OnlWS__StlmdateResp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_OnlWS__StlmdateResp(struct soap*, const struct OnlWS__StlmdateResp *, const char*, const char*);

#ifndef soap_write_OnlWS__StlmdateResp
#define soap_write_OnlWS__StlmdateResp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_OnlWS__StlmdateResp(soap, data),0) || soap_put_OnlWS__StlmdateResp(soap, data, "OnlWS:StlmdateResp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__StlmdateResp * SOAP_FMAC4 soap_get_OnlWS__StlmdateResp(struct soap*, struct OnlWS__StlmdateResp *, const char*, const char*);

#ifndef soap_read_OnlWS__StlmdateResp
#define soap_read_OnlWS__StlmdateResp(soap, data) ( soap_begin_recv(soap) || !soap_get_OnlWS__StlmdateResp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerToOnlWS__TZeroNodeInfoResp
#define SOAP_TYPE_PointerToOnlWS__TZeroNodeInfoResp (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToOnlWS__TZeroNodeInfoResp(struct soap*, struct OnlWS__TZeroNodeInfoResp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToOnlWS__TZeroNodeInfoResp(struct soap*, const char *, int, struct OnlWS__TZeroNodeInfoResp *const*, const char *);
SOAP_FMAC3 struct OnlWS__TZeroNodeInfoResp ** SOAP_FMAC4 soap_in_PointerToOnlWS__TZeroNodeInfoResp(struct soap*, const char*, struct OnlWS__TZeroNodeInfoResp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToOnlWS__TZeroNodeInfoResp(struct soap*, struct OnlWS__TZeroNodeInfoResp *const*, const char*, const char*);

#ifndef soap_write_PointerToOnlWS__TZeroNodeInfoResp
#define soap_write_PointerToOnlWS__TZeroNodeInfoResp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToOnlWS__TZeroNodeInfoResp(soap, data),0) || soap_put_PointerToOnlWS__TZeroNodeInfoResp(soap, data, "OnlWS:TZeroNodeInfoResp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__TZeroNodeInfoResp ** SOAP_FMAC4 soap_get_PointerToOnlWS__TZeroNodeInfoResp(struct soap*, struct OnlWS__TZeroNodeInfoResp **, const char*, const char*);

#ifndef soap_read_PointerToOnlWS__TZeroNodeInfoResp
#define soap_read_PointerToOnlWS__TZeroNodeInfoResp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToOnlWS__TZeroNodeInfoResp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToOnlWS__StlmdateResp
#define SOAP_TYPE_PointerToOnlWS__StlmdateResp (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToOnlWS__StlmdateResp(struct soap*, struct OnlWS__StlmdateResp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToOnlWS__StlmdateResp(struct soap*, const char *, int, struct OnlWS__StlmdateResp *const*, const char *);
SOAP_FMAC3 struct OnlWS__StlmdateResp ** SOAP_FMAC4 soap_in_PointerToOnlWS__StlmdateResp(struct soap*, const char*, struct OnlWS__StlmdateResp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToOnlWS__StlmdateResp(struct soap*, struct OnlWS__StlmdateResp *const*, const char*, const char*);

#ifndef soap_write_PointerToOnlWS__StlmdateResp
#define soap_write_PointerToOnlWS__StlmdateResp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToOnlWS__StlmdateResp(soap, data),0) || soap_put_PointerToOnlWS__StlmdateResp(soap, data, "OnlWS:StlmdateResp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__StlmdateResp ** SOAP_FMAC4 soap_get_PointerToOnlWS__StlmdateResp(struct soap*, struct OnlWS__StlmdateResp **, const char*, const char*);

#ifndef soap_read_PointerToOnlWS__StlmdateResp
#define soap_read_PointerToOnlWS__StlmdateResp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToOnlWS__StlmdateResp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToOnlWS__TZeroNodeInfo
#define SOAP_TYPE_PointerToOnlWS__TZeroNodeInfo (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToOnlWS__TZeroNodeInfo(struct soap*, struct OnlWS__TZeroNodeInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToOnlWS__TZeroNodeInfo(struct soap*, const char *, int, struct OnlWS__TZeroNodeInfo *const*, const char *);
SOAP_FMAC3 struct OnlWS__TZeroNodeInfo ** SOAP_FMAC4 soap_in_PointerToOnlWS__TZeroNodeInfo(struct soap*, const char*, struct OnlWS__TZeroNodeInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToOnlWS__TZeroNodeInfo(struct soap*, struct OnlWS__TZeroNodeInfo *const*, const char*, const char*);

#ifndef soap_write_PointerToOnlWS__TZeroNodeInfo
#define soap_write_PointerToOnlWS__TZeroNodeInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToOnlWS__TZeroNodeInfo(soap, data),0) || soap_put_PointerToOnlWS__TZeroNodeInfo(soap, data, "OnlWS:TZeroNodeInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct OnlWS__TZeroNodeInfo ** SOAP_FMAC4 soap_get_PointerToOnlWS__TZeroNodeInfo(struct soap*, struct OnlWS__TZeroNodeInfo **, const char*, const char*);

#ifndef soap_read_PointerToOnlWS__TZeroNodeInfo
#define soap_read_PointerToOnlWS__TZeroNodeInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToOnlWS__TZeroNodeInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
